	body {
		font-family: 'Prompt', sans-serif;
		overflow-x: hidden;
		margin: 0px;
	}

	.bgdark {
		background-color: #001220;
	}
	#bgdark {
		background-color: #001220;
	}

	.bgOpaqueLite{
		background-color: rgba(72, 95, 132, 0.8);  
	}

	.bgOpaqueDark{
		background-color: rgba(154, 152, 180, 0.75);  
	}

	.bgOpaqueDarkModal{
		background-color: rgba(255, 255, 255, 1);  
	}

	.space {
		aspect-ratio: 960/540;
		width: 100%;
		background-repeat: no-repeat;
		background-position: center;
		background-size: cover;
	}

	img.fngun {
		border: none;
		border-radius: 50%;
	}

	.bloblite{
		background-image: url('../images/blob-scene-lite.svg');
	}
	.blobdark{
		background-image: url('../images/blob-scene-dark.svg');
	}


	.layeredwaveslite1 {
		background-image: url('../images/layered-waves-lite-1.svg');
	}
	.layeredwavesdark1 {
		background-image: url('../images/layered-waves-dark-1.svg');
	}


	.waveslite1{
		background-image: url('../images/wave-lite-1.svg');
	}

	.wavesdark1{
		background-image: url('../images/wave-dark-1.svg');
	}

	.blob-lite2{
		background-image: url('../images/blob-scene-lite-2.svg');
	}
	.blob-lite-inverted2{
		background-image: url('../images/blob-scene-lite-inverted-2.svg');
	}
	.blob-dark2{
		background-image: url('../images/blob-scene-dark-2.svg');
	}

	.blob-dark-inverted2{
		background-image: url('../images/blob-scene-dark-inverted-2.svg');
	}

	.modal-footer{ 
		border-top: 1px solid #0275d8;
	}

	#btn-back-to-top {
		position: fixed;
		bottom: 30px;
  		right: 30px;
		display: none;
	}

	.nav-trans {
		transition: background-color 1.0s;
	}

	.bg-trans {
		transition: background-image 0.6s;
	}

	.navbar-toggler{
		border: none;
		outline: none;
	}

	.bg-lightgrey{
		background-color: rgb(129, 129, 129);
	}

	div.chart {
		width: 640px;
		height: 500px;
		padding: 20px;
	}

	.navbar-toggle {
    	padding-left: 100px;
	}	

	@media only screen and (max-width: 700px){
		div.chart {
			width: 90%;
			height: 45%;
			padding: 20px;
		}
	}
	@media only screen and (max-width: 400px){
		div.chart {
			width: 350px;
			height: 600px;
			padding: 20px;
		}
		div.pad {
			width: 400px;
			height: 300px;
			padding-right: 50px;
		}
		
	}
	@media only screen and (max-width: 300px){
		div.chart {
			width: 200px;
			height: 200px;
			padding: 20px;
		}
	}
	@media only screen and (max-width: 200px){
		div.chart {
			width: 100px;
			height: 100px;
			padding: 20px;
		}
	}


	@media only screen and (max-width: 700px){
		button.footertext {
			font-size: 10px;
		}
	}
	@media only screen and (max-width: 400px){
		button.footertext {
			font-size: 9px;
		}
	}
	@media only screen and (max-width: 300px){
		button.footertext {
			font-size: 7px;
		}
	}
	@media only screen and (max-width: 200px){
		button.footertext {
			font-size: 6px;
		}
	}
	
	div.modal-dark .modal-content {
		background-color: #1e2229;
		color: white;
	}
	

	div.modal-dark .modal-content .modal-footer {
		border-color: #424242;
		color: white;
	}
	
	div.modal-dark .form-control {
		background-color: #282d36;
		border-color: #282d36;
		color: white;
	}

	div.modal-dark .table{
		color: white;
	}

	.thumbnail {
		animation-name: leftToRight;
		animation-duration: 1.1s;
	}

	.navtext{
		animation-name: topToDown;
		animation-duration: 1.0s;
	}

	.buttons {
		animation-name: topToDown;
		animation-duration: 1.0s;
	}

	.window{
		animation-name: maxLeftToRight;
		animation-duration: 1.0s;
	}

	.window-fill{
		animation-name: fillWindow;
		animation-duration: 1.5s;
	}

	.modal-fill{
		animation-name: fillWindow;
		animation-duration: 0.5s;
	}

	.relicsImage{
		text-align: center;
	}

	.relicsImageheight img{
		height: 400px;		
	}

	@keyframes fillWindow {
		from{ opacity: 0;}
		to{ opacity: 1; }
	}

	@keyframes leftToRight {
		from{ transform: translateX(-70px)}
		to{ transform: translateX(0px) }
	}

	@keyframes leftToRight {
		from{ transform: translateX(-70px)}
		to{ transform: translateX(0px) }
	}

	@keyframes maxLeftToRight {
		from{ transform: translateX(-700px)}
		to{ transform: translateX(0px) }
	}

	@keyframes topToDown {
		from{ transform: translateY(-70px)}
		to{ transform: translateY(0px) }
	}
